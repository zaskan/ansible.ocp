- name: Create Namespace for {{ operator.name }}
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: project.openshift.io/v1
      kind: Project
      metadata:
        name: "{{ operator.namespace }}"

- name: Create Operator Group for {{ operator.name }}
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: "{{ operator.namespace }}"
        namespace: "{{ operator.namespace }}"
      spec:
        targetNamespaces:
        - "{{ operator.namespace }}"
  when: operator.clusterwide is false

- name: Install Subscription for {{ operator.name }}
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: "{{ operator.name }}"
        namespace: "{{ operator.namespace }}"
        labels:
          operators.coreos.com/openshift-gitops-operator.openshift-operators: ""
      spec:
        channel: "{{ operator.channel }}"
        name: "{{ operator.name }}"
        source: "{{ operator.source }}"
        sourceNamespace: "{{ operator.sourcenamespace }}"
        installPlanApproval: Automatic
        clusterwide: "{{ operator.clusterwide }}"

- name: Get ClusterServiceVersion from Subscription for {{ operator.name }}
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    namespace: "{{ operator.namespace }}"
    name: "{{ operator.name }}"
  register: subscription_info
  until: subscription_info.resources | length > 0 and subscription_info.resources[0].status is defined and subscription_info.resources[0].status.installedCSV is defined
  retries: 30
  delay: 10

- name: Wait for {{ operator.name }}) to be installed
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: ClusterServiceVersion
    namespace: "{{ operator.namespace }}"
    name: "{{ subscription_info.resources[0].status.installedCSV }}"
  register: operator_info
  until: operator_info.resources | length > 0 and operator_info.resources[0].status.phase == "Succeeded"
  retries: 30
  delay: 10
  ignore_errors: true

- name: Fail if the operator ({{ operator.name }}) installation failed
  fail:
    msg: "Failed to install {{ operator.name }} Operator"
  when: operator_info is failed

